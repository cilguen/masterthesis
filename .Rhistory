plot(fit, cex=0.4)
fit <- hclust(d, method = method)
plot(fit, cex=0.4)
method <- "single"
fit <- hclust(d, method = method)
plot(fit, cex=0.4)
rect.hclust(fit, k=4)
groups <- cutree(hclust(d, method=method), k=3) # Assign observations to groups
cluster::clusplot(choices, groups, color=TRUE, shade=TRUE, labels=2, lines=0)
guess <- mclust::Mclust(choices)
summary(guess)
choices <- data %>%
select(starts_with("choice"))
choices <- data %>% dplyr::select(starts_with("choice"))
d <- dist(choices, method="binary") # construct a distance matrix.
method <- "median"
fit <- hclust(d, method = method)
plot(fit, cex=0.4)
rect.hclust(fit, k=4)
groups <- cutree(hclust(d, method=method), k=3) # Assign observations to groups
cluster::clusplot(choices, groups, color=TRUE, shade=TRUE, labels=2, lines=0)
guess <- mclust::Mclust(choices)
summary(guess)
rect.hclust(fit, k=3)
rect.hclust(fit, k=2)
plot(fit, cex=0.4)
rect.hclust(fit, k=2)
method <- "average"
fit <- hclust(d, method = method)
plot(fit, cex=0.4)
rect.hclust(fit, k=2)
method <- "ward.D"
fit <- hclust(d, method = method)
plot(fit, cex=0.4)
rect.hclust(fit, k=2)
method <- "ward.D2"
fit <- hclust(d, method = method)
plot(fit, cex=0.4)
rect.hclust(fit, k=2)
method <- "single"
fit <- hclust(d, method = method)
plot(fit, cex=0.4)
rect.hclust(fit, k=2)
method <- "complete"
fit <- hclust(d, method = method)
plot(fit, cex=0.4)
rect.hclust(fit, k=2)
method <- "centroid"
fit <- hclust(d, method = method)
plot(fit, cex=0.4)
rect.hclust(fit, k=2)
method <- "median"
fit <- hclust(d, method = method)
plot(fit, cex=0.4)
rect.hclust(fit, k=2)
method <- "average"
fit <- hclust(d, method = method)
plot(fit, cex=0.4)
rect.hclust(fit, k=2)
method <- "mcquitty"
fit <- hclust(d, method = method)
plot(fit, cex=0.4)
rect.hclust(fit, k=2)
method <- "ward.D"
fit <- hclust(d, method = method)
plot(fit, cex=0.4)
rect.hclust(fit, k=2)
method <- "ward.D2"
fit <- hclust(d, method = method)
plot(fit, cex=0.4)
rect.hclust(fit, k=2)
View(choices)
View(data)
method <- "ward.D2"
fit <- hclust(d, method = method)
plot(fit, cex=0.4)
rect.hclust(fit, k=3)
sum(data$participant.svo_category == "Prosocial")
sum(data$participant.svo_category == "Individualistic")
groups <- cutree(hclust(d, method=method), k=3) # Assign observations to groups
cluster::clusplot(choices, groups, color=TRUE, shade=TRUE, labels=2, lines=0)
guess <- mclust::Mclust(choices)
summary(guess)
setwd("C:/Users/Can/Desktop/masterthesis")
data <- read.csv("data/full_data.csv")
prosocial_data <- read.csv("data/prosocial_data.csv")
library(fixest)
install.packages("fixest")
library("fixest")
feglm(
choice0 ~
choice00 +
choice01 +
choice02 +
choice03 +
choice04 +
choice05 +
choice06 |
id, data = data)
feglm(
choice0 ~
choice00 +
choice01 +
choice02 +
choice03 +
choice04 +
choice05 +
choice06 |
Age + Sex + participant.svo_category, data = data)
feglm(
choice0 ~
choice00 +
choice01 +
choice02 +
choice03 +
choice04 +
choice05 +
choice06 |
Age + Sex + participant.svo_category,
family = "gaussian"
data = data)
feglm(
choice0 ~
choice00 +
choice01 +
choice02 +
choice03 +
choice04 +
choice05 +
choice06 |
Age + Sex + participant.svo_category,
family = "gaussian",
data = data)
feglm(
choice0 ~
choice00 +
choice01 +
choice02 +
choice03 +
choice04 +
choice05 +
choice06 |
Age + Sex + participant.svo_category,
family = "poisson",
data = data)
feglm(
choice0 ~
choice00 +
choice01 +
choice02 +
choice03 +
choice04 +
choice05 +
choice06 |
Age + Sex + participant.svo_category,
family = "logit",
data = data)
feglm(
choice0 ~
choice00 +
choice01 +
choice02 +
choice03 +
choice04 +
choice05 +
choice06 |
Age + Sex ,
family = "logit",
data = data)
data$uo_count <- rowSums(choice00 == 1 + choice01 == 1 + choice02 == 1 + choice03 == 1 + choice 11 == 1)
data$uo_count <- rowSums(data$choice00 == 1 + data$choice01 == 1 + data$choice02 == 1 + data$choice03 == 1 + data$choice11 == 1)
data$uo_count <- rowSums(data[, c("choice00", "choice01", "choice02", "choice03", "choice11")] == 1)
feglm(
uo_count ~
choice00 +
choice01 +
choice02 +
choice03 +
choice04 +
choice05 +
choice06 |
Age + Sex ,
family = "logit",
data = data)
feglm(
uo_count ~
choice00 +
choice01 +
choice02 +
choice03 +
choice04 +
choice05 +
choice06 |
Age + Sex ,
family = "poisson",
data = data)
data$uo_count <- rowSums(data[, c("choice00", "choice01", "choice02", "choice03", "choice11", "choice12")] == 1)
feglm(
uo_count ~
choice00 +
choice01 +
choice02 +
choice03 +
choice04 +
choice05 +
choice06 |
Age + Sex ,
family = "poisson",
data = data)
data$uo_count <- rowSums(data[, c("choice0", "choice1", "choice00", "choice01", "choice02", "choice03", "choice11", "choice12")] == 1)
feglm(
uo_count ~
choice00 +
choice01 +
choice02 +
choice03 +
choice04 +
choice05 +
choice06 |
Age + Sex ,
family = "poisson",
data = data)
hist(data$uo_count)
feglm(
uo_count ~
choice0 +
choice00 |
Age + Sex ,
family = "poisson",
data = data)
feglm(
uo_count ~
choice0 +
choice00 |
Age + Sex + id,
family = "poisson",
data = data)
feglm(
c("uo_count", "choice0", "choice1", "choice2", "choice3", "choice4") ~
choice00 +
choice01 +
choice02 +
choice03 +
choice04 +
choice05 +
choice06 |
Age + Sex ,
family = "poisson",
data = data)
feglm(
c(uo_count, choice0, choice1, choice2, choice3, choice4) ~
choice00 +
choice01 +
choice02 +
choice03 +
choice04 +
choice05 +
choice06 |
Age + Sex ,
family = "poisson",
data = data)
feglm(
c(choice0, choice1, choice2, choice3, choice4) ~
choice00 +
choice01 +
choice02 +
choice03 +
choice04 +
choice05 +
choice06 +
choice11 +
choice12 +
choice13 +
choice14 +
choice15 +
choice16 +
choice22 +
choice23 +
choice24 +
choice25 +
choice26 +
choice33 +
choice34 +
choice35 +
choice36 +
choice44 +
choice45 +
choice46 +
choice55 +
choice56 +
choice66 |
Age + Sex ,
family = "poisson",
data = data)
feglm(
c(choice0, choice1, choice2, choice3, choice4) ~
choice00 +
choice01 +
choice02 +
choice03 +
choice04 +
choice05 +
choice06 +
choice11 +
choice12 +
choice13 +
choice14 +
choice15 +
choice16 +
choice22 +
choice23 +
choice24 +
choice25 +
choice26 +
choice33 +
choice34 +
choice35 +
choice36 +
choice44 +
choice45 +
choice46 +
choice55 +
choice56 +
choice66 |
Age + Sex ,
family = "binomial",
data = data)
feglm(
c(choice0, choice1, choice2, choice3, choice4) ~
choice00 +
choice01 +
choice02 +
choice03 +
choice04 +
choice05 +
choice06 +
choice11 +
choice12 +
choice13 +
choice14 +
choice15 +
choice16 +
choice22 +
choice23 +
choice24 +
choice25 +
choice26 +
choice33 +
choice34 +
choice35 +
choice36 +
choice44 +
choice45 +
choice46 +
choice55 +
choice56 +
choice66 |
Age + Sex ,
family = "logit",
data = data)
feglm(
c(choice0, choice1, choice2, choice3, choice4) ~
choice00 +
choice01 +
choice02 +
choice03 +
choice04 +
choice05 +
choice06 +
choice11 +
choice12 +
choice13 +
choice14 +
choice15 +
choice16 +
choice22 +
choice23 +
choice24 +
choice25 +
choice26 +
choice33 +
choice34 +
choice35 +
choice36 +
choice44 +
choice45 +
choice46 +
choice55 +
choice56 +
choice66 |
Age + Sex ,
family = "logit",
data = data)
feglm(
c(choice0, choice1, choice2, choice3, choice4) ~
choice00 +
choice01 +
choice02 +
choice03 +
choice04 +
choice05 +
choice06 +
choice11 +
choice12 +
choice13 +
choice14 +
choice15 +
choice16 +
choice22 +
choice23 +
choice24 +
choice25 +
choice26 +
choice33 +
choice34 +
choice35 +
choice36 +
choice44 +
choice45 +
choice46 +
choice55 +
choice56 +
choice66 |
Age  ,
family = "logit",
data = data)
data$go_count <- rowSums(data[, c("choice00",
"choice01",
"choice02",
"choice03",
"choice04",
"choice05",
"choice06",
"choice11",
"choice12",
"choice13",
"choice14",
"choice15",
"choice16",
"choice22",
"choice23",
"choice24",
"choice25",
"choice26",
"choice33",
"choice34",
"choice35",
"choice36",
"choice44",
"choice45",
"choice46",
"choice55",
"choice56",
"choice66")] == 1)
data$io_count <- rowSums(data[, c("choice0",
"choice1",
"choice2",
"choice3",
"choice4")] == 1)
hist(data$io_count)
hist(data$go_count)
hist(data$io_count)
hist(data$go_count)
data$go_perc <- data$go_count / 28
hist(data$go_perc)
hist(data$go_count)
data$io_perc <- data$io_count / 4
hist(data$io_perc)
table(data$io_perc)
data$io_perc <- data$io_count / 5
table(data$go_perc)
feglm(uo_count ~ io_perc + go_perc | id,  family = "logit",
data = data)
feglm(uo_count ~ io_perc + go_perc | id,  family = "poisson",
data = data)
feglm(uo_count ~ io_perc + go_perc | Age,  family = "poisson", data = data)
feglm(uo_count ~ io_perc + go_perc | Age + Sex,  family = "poisson", data = data)
feols(uo_count ~ io_perc + po_perc) | id, data)
feols(uo_count ~ io_perc + po_perc) | id, data= data)
feols(uo_count ~ io_perc + po_perc) | id , data= data)
feols(uo_count ~ io_perc + po_perc) | Age , data= data)
feols(uo_count ~ io_perc + po_perc | Age , data= data)
feols(uo_count ~ io_perc + go_perc | Age , data= data)
feols(uo_count ~ io_perc + go_perc | id , data= data)
feols(uo_count ~ io_perc + go_perc | Age + Sex , data= data)
feols(uo_count ~ io_perc + go_perc | cws(Age, Sex) , data= data)
feols(uo_count ~ io_perc + go_perc | csw(Age, Sex) , data= data)
feols(uo_count ~ io_perc + go_perc | csw(0, Age, Sex) , data= data)
feols(uo_count ~ io_perc + go_perc , data= data)
feols(uo_count ~ io_perc + go_perc | csw(0, Age, Sex) , data= data)
feols(uo_count ~ io_perc + go_perc | csw0(Age, Sex) , data= data)
feols(uo_count ~ io_perc + go_perc | cw0(Age, Sex) , data= data)
feols(uo_count ~ io_perc + go_perc | csw0(Age, Sex) , data= data)
feols(uo_count ~ io_perc + go_perc | csw0(Age, Sex) , data = prosocial_data)
prosocial_data <- subset(data, participant.svo_category == "Prosocial")
feols(uo_count ~ io_perc + go_perc | csw0(Age, Sex) , data = prosocial_data)
feols(uo_count ~ io_perc + go_perc | csw0(Age, Sex, participant.svo_category) , data = data)
summary(feols(uo_count ~ io_perc + go_perc | csw0(Age, Sex, participant.svo_category) , data = data))
shapiro.test(data$io_perc)
hist(data$io_perc)
shapiro.test(data$go_perc)
hist(data$go_perc)
wilcox.test(data$go_perc, data$io_perc)
wilcox.test(data$go_perc, data$io_perc, alternative = "greater")
shapiro.test(data$go_perc - data$io_perc)
hist(data$go_perc - data$io_perc)
wilcox.test(data$go_perc, data$io_perc)
wilcox.test(data$go_perc, data$io_perc, alternative = "greater")
wilcox.test(data$io_perc, data$go_perc, alternative = "greater")
wilcox.test(data$go_perc, data$io_perc, alternative = "greater") # group offer acceptance rate is bigger than individual offer acceptance rate
wilcox.test(prosocial_data$go_perc, prosocial_data$io_perc) # group offer acceptance rate is different from individual offer acceptance rate
wilcox.test(prosocial_data$go_perc, prosocial_data$io_perc, alternative = "greater") # group offer acceptance rate is bigger than individual offer acceptance rate
