# master script
setwd("C:/Users/Can/Desktop/masterthesis/")
##### load answers #####
answers_file_path <- "data/UG.csv"
# Read the CSV file into a data frame
answers <- read.csv(answers_file_path)
##### load demographics #####
demographics_file_path <- "data/Demographic_UG_full.csv"
# Read the CSV file into a data frame
demographics <- read.csv(demographics_file_path)
##### merge answers and demographics #####
answers$id <- answers$intro.1.player.prolificid
demographics$id <- demographics$Participant.id
# Merge the two datasets based on the respective columns
data <- merge(answers, demographics,
by.x = "id",
by.y = "id",
all.x = TRUE)
##### clean dataset #####
# This is code to clean the dataset
# Drop rows where the ID variable is empty
data <- subset(data, !is.na(id) & id != "")
library(tidyverse)
# Assuming your dataframe is named your_dataframe
data %>%
summarise(across(ends_with("choice1"), sum, na.rm = TRUE))
# cleaning choice0 to choice4
for (i in 0:4) {
col_name <- paste0("choice", i)
data <- data %>%
mutate(!!col_name := rowSums(select(., ends_with(col_name)), na.rm = TRUE))
}
# cleaning choice00 to choice06
for (i in 0:6) {
col_name <- paste0("choice", sprintf("%02d", i))
data <- data %>%
mutate(!!col_name := rowSums(select(., ends_with(col_name)), na.rm = TRUE))
}
# cleaning choice11 to choice16
for (i in 11:16) {
col_name <- paste0("choice", i)
data <- data %>%
mutate(!!col_name := rowSums(select(., ends_with(col_name)), na.rm = TRUE))
}
# cleaning choice22 to choice26
for (i in 22:26) {
col_name <- paste0("choice", i)
data <- data %>%
mutate(!!col_name := rowSums(select(., ends_with(col_name)), na.rm = TRUE))
}
# cleaning choice33 to choice36
for (i in 33:36) {
col_name <- paste0("choice", i)
data <- data %>%
mutate(!!col_name := rowSums(select(., ends_with(col_name)), na.rm = TRUE))
}
# cleaning choice44 to choice46
for (i in 44:46) {
col_name <- paste0("choice", i)
data <- data %>%
mutate(!!col_name := rowSums(select(., ends_with(col_name)), na.rm = TRUE))
}
# cleaning choice55 to choice56
for (i in 55:56) {
col_name <- paste0("choice", i)
data <- data %>%
mutate(!!col_name := rowSums(select(., ends_with(col_name)), na.rm = TRUE))
}
# cleaning choice66 to choice66
for (i in 66:66) {
col_name <- paste0("choice", i)
data <- data %>%
mutate(!!col_name := rowSums(select(., ends_with(col_name)), na.rm = TRUE))
}
# drop variables that are unnecessary
data <- data %>%
select(-starts_with("g_ug_mp"))
data <- data %>%
select(-starts_with("g_ug_sp"))
data <- data %>%
select(-starts_with("session."))
data <- data %>%
select(-ends_with("player.angle"))
data <- data %>%
select(-ends_with("player.role"))
data <- data %>%
select(-ends_with("player.payoff"))
data <- data %>%
select(-ends_with("player.category"))
data <- data %>%
select(-ends_with("player.id_in_group"))
data <- data %>%
select(-ends_with("group.id_in_subsession"))
data <- data %>%
select(-ends_with("subsession.round_number"))
data <- data %>%
select(-c(
"Completion.code",
"Archived.at",
"Participant.id",
"Submission.id",
"Status",
"Reviewed.at",
"Employment.status",
"Student.status",
"Language",
"Nationality",
"Country.of.residence",
"Country.of.birth",
"Ethnicity.simplified",
"Total.approvals",
"contact.1.player.email",
"participant.visited",
"participant._current_page_name",
"participant._current_app_name",
"participant._max_page_index",
"participant._index_in_pages",
"participant.code",
"participant.id_in_session",
"intro.1.player.prolificid",
"participant.payoff",
"participant.mturk_assignment_id",
"participant.mturk_worker_id",
"participant.label"
))
# Filter out people who did not finish
data <- data %>%
filter(participant.progress == 57)
# clean data where consent was revoked
data <- data %>%
mutate_all(~ ifelse(. == "CONSENT_REVOKED", NA, .))
# clean data that expired
data <- data %>%
mutate_all(~ ifelse(. == "DATA_EXPIRED", NA, .))
# format Age as numeric
data$Age <- as.numeric(data$Age)
# Filter out people who failed the test rounds
data <- data %>%
filter(ac_ug_sp.1.player.proposer_payoff == 3)
# Filter out people who failed the test rounds
data <- data %>%
filter(ac_ug_sp.1.player.responder_payoff == 1)
# Filter out people who failed the test rounds
data <- data %>%
filter(ac_ug_mp.1.player.responder_payoff == 2)
# Filter out people who failed the test rounds
data <- data %>%
filter(ac_ug_mp.1.player.proposer1_payoff == 2)
# Filter out people who failed the test rounds
data <- data %>%
filter(ac_ug_mp.1.player.proposer2_payoff == 2)
##### export data #####
prosocial_data <- subset(data, participant.svo_category == "Prosocial")
# save prepared dataset
write.csv(data, "data/full_data.csv", row.names = FALSE)
write.csv(prosocial_data, "data/prosocial_data.csv", row.names = FALSE)
setwd("C:/Users/Can/Desktop/masterthesis")
data <- read.csv("data/full_data.csv")
prosocial_data <- subset(data, participant.svo_category == "Prosocial")
# show average acceptance rate by offer amount
library(ggplot2)
library(gridExtra)
# choice0 to choice4
# Creating a new data frame with the percentage of occurrences for each choice variable
percentage_data_0_6 <- data.frame(
category = paste0("choice",0:4),
percentage = colMeans(data[, paste0("choice",0:4)] == 1, na.rm = TRUE) * 100
)
# Creating the bar chart
ggplot(percentage_data_0_6, aes(x = category, y = percentage)) +
geom_bar(stat = "identity", fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Percentage of choiceX == 1", x = "Category", y = "Percentage") +
ylim(0, 100) +
theme_minimal()
# choice00 to choice06
# Creating a new data frame with the percentage of occurrences for each choice variable
percentage_data_00_06 <- data.frame(
category = paste0("choice0",0:6),
percentage = colMeans(data[, paste0("choice0",0:6)] == 1, na.rm = TRUE) * 100
)
# Creating the bar chart
ggplot(percentage_data_00_06, aes(x = category, y = percentage)) +
geom_bar(stat = "identity", fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Percentage of choiceXX == 1", x = "Category", y = "Percentage") +
ylim(0, 100) +
theme_minimal()
# choice11 to choice16
# Creating a new data frame with the percentage of occurrences for each choice variable
percentage_data_11_16 <- data.frame(
category = paste0("choice1",1:6),
percentage = colMeans(data[, paste0("choice1",1:6)] == 1, na.rm = TRUE) * 100
)
# Creating the bar chart
ggplot(percentage_data_11_16, aes(x = category, y = percentage)) +
geom_bar(stat = "identity", fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Percentage of choiceXX == 1", x = "Category", y = "Percentage") +
ylim(0, 100) +
theme_minimal()
# choice22 to choice26
# Creating a new data frame with the percentage of occurrences for each choice variable
percentage_data_22_26 <- data.frame(
category = paste0("choice2",2:6),
percentage = colMeans(data[, paste0("choice2",2:6)] == 1, na.rm = TRUE) * 100
)
# Creating the bar chart
ggplot(percentage_data_22_26, aes(x = category, y = percentage)) +
geom_bar(stat = "identity", fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Percentage of choiceXX == 1", x = "Category", y = "Percentage") +
ylim(0, 100) +
theme_minimal()
# choice33 to choice36
# Creating a new data frame with the percentage of occurrences for each choice variable
percentage_data_33_36 <- data.frame(
category = paste0("choice3",3:6),
percentage = colMeans(data[, paste0("choice3",3:6)] == 1, na.rm = TRUE) * 100
)
# Creating the bar chart
ggplot(percentage_data_33_36, aes(x = category, y = percentage)) +
geom_bar(stat = "identity", fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Percentage of choiceXX == 1", x = "Category", y = "Percentage") +
ylim(0, 100) +
theme_minimal()
# choice44 to choice46
# Creating a new data frame with the percentage of occurrences for each choice variable
percentage_data_44_46 <- data.frame(
category = paste0("choice4",4:6),
percentage = colMeans(data[, paste0("choice4",4:6)] == 1, na.rm = TRUE) * 100
)
# Creating the bar chart
ggplot(percentage_data_44_46, aes(x = category, y = percentage)) +
geom_bar(stat = "identity", fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Percentage of choiceXX == 1", x = "Category", y = "Percentage") +
ylim(0, 100) +
theme_minimal()
# choice55 to choice56
# Creating a new data frame with the percentage of occurrences for each choice variable
percentage_data_55_56 <- data.frame(
category = paste0("choice5",5:6),
percentage = colMeans(data[, paste0("choice5",5:6)] == 1, na.rm = TRUE) * 100
)
# Creating the bar chart
ggplot(percentage_data_55_56, aes(x = category, y = percentage)) +
geom_bar(stat = "identity", fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Percentage of choiceXX == 1", x = "Category", y = "Percentage") +
ylim(0, 100) +
theme_minimal()
# choice66
# Creating a new data frame with the percentage of occurrences for each choice variable
percentage_data_66 <- data.frame(
category = paste0("choice6",6:6),
percentage = mean(data[, paste0("choice6",6:6)] == 1, na.rm = TRUE) * 100
)
# Creating the bar chart
ggplot(percentage_data_66, aes(x = category, y = percentage)) +
geom_bar(stat = "identity", fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Percentage of choiceXX == 1", x = "Category", y = "Percentage") +
ylim(0, 100) +
theme_minimal()
library(ggplot2)
library(gridExtra)
# Combine all the plots
combined_plots <- grid.arrange(
ggplot(percentage_data_0_6, aes(x = category, y = percentage)) +
geom_bar(stat = "identity", fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Percentage of choiceX == 1", x = "Category", y = "Percentage") +
ylim(0, 100) +
theme_minimal(),
ggplot(percentage_data_00_06, aes(x = category, y = percentage)) +
geom_bar(stat = "identity", fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Percentage of choiceXX == 1", x = "Category", y = "Percentage") +
ylim(0, 100) +
theme_minimal(),
ggplot(percentage_data_11_16, aes(x = category, y = percentage)) +
geom_bar(stat = "identity", fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Percentage of choiceXX == 1", x = "Category", y = "Percentage") +
ylim(0, 100) +
theme_minimal(),
ggplot(percentage_data_22_26, aes(x = category, y = percentage)) +
geom_bar(stat = "identity", fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Percentage of choiceXX == 1", x = "Category", y = "Percentage") +
ylim(0, 100) +
theme_minimal(),
ggplot(percentage_data_33_36, aes(x = category, y = percentage)) +
geom_bar(stat = "identity", fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Percentage of choiceXX == 1", x = "Category", y = "Percentage") +
ylim(0, 100) +
theme_minimal(),
ggplot(percentage_data_44_46, aes(x = category, y = percentage)) +
geom_bar(stat = "identity", fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Percentage of choiceXX == 1", x = "Category", y = "Percentage") +
ylim(0, 100) +
theme_minimal(),
ggplot(percentage_data_55_56, aes(x = category, y = percentage)) +
geom_bar(stat = "identity", fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Percentage of choiceXX == 1", x = "Category", y = "Percentage") +
ylim(0, 100) +
theme_minimal(),
ggplot(percentage_data_66, aes(x = category, y = percentage)) +
geom_bar(stat = "identity", fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Percentage of choiceXX == 1", x = "Category", y = "Percentage") +
ylim(0, 100) +
theme_minimal(),
ncol = 2  # You can adjust the number of columns as needed
)
# Print the combined plot
print(combined_plots)
library(ggplot2)
library(stringr)
# Combine all the data into one data frame
combined_data <- rbind(
cbind(percentage_data_0_6, choice = "choice0"),
cbind(percentage_data_00_06, choice = "choice00"),
cbind(percentage_data_11_16, choice = "choice11"),
cbind(percentage_data_22_26, choice = "choice22"),
cbind(percentage_data_33_36, choice = "choice33"),
cbind(percentage_data_44_46, choice = "choice44"),
cbind(percentage_data_55_56, choice = "choice55"),
cbind(percentage_data_66, choice = "choice66")
)
# Creating the combined plot without facets
ggplot(combined_data, aes(x = category, y = percentage, fill = choice)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8), color = "black", alpha = 0.7) +
labs(title = "Percentage of choiceX == 1", x = "Offer", y = "Percentage Accepted") +
ylim(0, 100) +
theme_minimal() +
scale_fill_manual(values = c("choice0" = "blue", "choice00" = "red", "choice11" = "green",
"choice22" = "orange", "choice33" = "purple", "choice44" = "pink",
"choice55" = "brown", "choice66" = "cyan")) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
legend.position = "none") +
scale_x_discrete(labels = function(x) str_replace(x, "choice", ""))
# only unfair offers
unfair_offers <- c("choice0", "choice00", "choice01", "choice1", "choice02", "choice11", "choice03", "choice12")
percentage_data_unfair_offers <- data.frame(
category = unfair_offers,
percentage = colMeans(data[, unfair_offers] == 1, na.rm = TRUE) * 100
)
# Creating the bar chart
ggplot(percentage_data_unfair_offers, aes(x = category, y = percentage)) +
geom_bar(stat = "identity", fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Percentage of choiceX == 1", x = "Category", y = "Percentage") +
ylim(0, 100) +
theme_minimal()
